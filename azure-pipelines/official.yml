trigger:
  batch: true
  branches:
    include:
    - main
    - microbuild
    - 'validate/*'
  paths:
    exclude:
    - doc/
    - '*.md'
    - .vscode/
    - azure-pipelines/release.yml
    - azure-pipelines/vs-insertion.yml
#schedules:
#- cron: "0 3 * * *" # Daily @ 8 PM PST
#  displayName: Daily vs-insertion
#  branches:
#    include:
#    - microbuild

parameters:
# As an entrypoint pipeline yml file, all parameters here show up in the Queue Run dialog.
# If any paramaters should NOT be queue-time options, they should be removed from here
# and references to them in this file replaced with hard-coded values.
- name: RealSign
  displayName: Real sign?
  type: boolean
  default: false
# - name: ShouldSkipOptimize # Uncomment this and references to it below when setting EnableOptProf to true in build.yml.
#   displayName: Skip OptProf optimization
#   type: boolean
#   default: false
- name: EnableMacOSBuild
  displayName: Build on macOS
  type: boolean
  default: false # macOS is often bogged down in Azure Pipelines
- name: RunTests
  displayName: Run tests
  type: boolean
  default: true
- name: EnableCompliance
  displayName: Run Compliance Tools
  type: boolean
  default: true
# Enable in individual repos only AFTER updating TSAOptions.json with your own values
# Allowed values:
# - 'false': no APIScan will be run
# - 'true': APIScan will run as part of the official pipeline
# - 'pipeline': The official pipeline will prepare an APIScanInputs artifact but will not run APIScan itself.
#               This is useful for running APIScan in a separate pipeline on a schedule so as to not slow down the CI pipeline.
#               Use this in combination with the `apiscan_pipeline.yml` pipeline which you'll set up in AzDO.
- name: EnableAPIScan
  displayName: Include APIScan with Compliance tools
  type: string
  default: 'false'

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

variables:
- template: GlobalVariables.yml

extends:
  ${{ if parameters.EnableCompliance }}:
    template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
    parameters:
      sdl:
        sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES
        policheck:
          enabled: true
          exclusionsFile: $(System.DefaultWorkingDirectory)\azure-pipelines\PoliCheckExclusions.xml
        suppression:
          suppressionFile: $(System.DefaultWorkingDirectory)\azure-pipelines\falsepositives.gdnsuppress
        sbom:
          enabled: ${{ or(parameters.RealSign, eq(variables['Build.Reason'],'Schedule')) }} # Disable the generation for SBOMs for artifacts in unsigned builds since it's slow
      stages:
      - stage: Build
        variables:
        - template: /azure-pipelines/BuildStageVariables.yml@self
        jobs:
        - template: /azure-pipelines/build.yml@self
          parameters:
            Is1ESPT: true
            RealSign: ${{ or(parameters.RealSign, eq(variables['Build.Reason'],'Schedule')) }}
            # ShouldSkipOptimize: ${{ parameters.ShouldSkipOptimize }}
            ${{ if and(parameters.EnableCompliance, ne(variables['Build.Reason'], 'pullRequest')) }}:
              EnableAPIScan: ${{ parameters.EnableAPIScan }}
            windowsPool: VSEngSS-MicroBuild2022-1ES
            linuxPool:
              name: AzurePipelines-EO
              demands:
              - ImageOverride -equals 1ESPT-Ubuntu22.04
              os: Linux
            macOSPool:
              name: Azure Pipelines
              vmImage: macOS-12
              os: macOS
            EnableMacOSBuild: ${{ parameters.EnableMacOSBuild }}
            RunTests: ${{ parameters.RunTests }}
      - template: /azure-pipelines/prepare-insertion-stages.yml@self
        parameters:
          RealSign: ${{ or(parameters.RealSign, eq(variables['Build.Reason'],'Schedule')) }}
  ${{ else }}:
    template: azure-pipelines/MicroBuild.1ES.Unofficial.yml@MicroBuildTemplate
    parameters:
      sdl:
        sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES
        suppression:
          suppressionFile: $(System.DefaultWorkingDirectory)\azure-pipelines\falsepositives.gdnsuppress
      stages:
      - stage: Build
        variables:
        - template: /azure-pipelines/BuildStageVariables.yml@self
        jobs:
        - template: /azure-pipelines/build.yml@self
          parameters:
            Is1ESPT: true
            RealSign: ${{ or(parameters.RealSign, eq(variables['Build.Reason'],'Schedule')) }}
            # ShouldSkipOptimize: ${{ parameters.ShouldSkipOptimize }}
            ${{ if and(parameters.EnableCompliance, ne(variables['Build.Reason'], 'pullRequest')) }}:
              EnableAPIScan: ${{ parameters.EnableAPIScan }}
            windowsPool: VSEngSS-MicroBuild2022-1ES
            linuxPool:
              name: AzurePipelines-EO
              demands:
              - ImageOverride -equals 1ESPT-Ubuntu22.04
              os: Linux
            macOSPool:
              name: Azure Pipelines
              vmImage: macOS-12
              os: macOS
            EnableMacOSBuild: ${{ parameters.EnableMacOSBuild }}
            RunTests: ${{ parameters.RunTests }}
      - template: /azure-pipelines/prepare-insertion-stages.yml@self
        parameters:
          RealSign: ${{ or(parameters.RealSign, eq(variables['Build.Reason'],'Schedule')) }}
