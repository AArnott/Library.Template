steps:
- task: DownloadBuildArtifacts@0
  displayName: Download Windows code coverage results
  inputs:
    artifactName: coverageResults-Windows
    downloadPath: $(System.DefaultWorkingDirectory)/bin
- task: DownloadBuildArtifacts@0
  displayName: Download Linux code coverage results
  inputs:
    artifactName: coverageResults-Linux
    downloadPath: $(System.DefaultWorkingDirectory)/bin
- task: DownloadBuildArtifacts@0
  displayName: Download macOS code coverage results
  inputs:
    artifactName: coverageResults-macOS
    downloadPath: $(System.DefaultWorkingDirectory)/bin
- powershell: |
    dotnet tool install --tool-path obj dotnet-reportgenerator-globaltool
    Copy-Item $(System.DefaultWorkingDirectory)/bin/coverageResults-Windows/obj $(System.DefaultWorkingDirectory)/obj -rec # place build-generated source files for discovery by report generator
    $Inputs = [string]::join(';', (gci $(System.DefaultWorkingDirectory)/bin/coverage.cobertura.xml -rec |% { Resolve-Path -relative $_ }))
    obj/reportgenerator -reports:"$Inputs" -targetdir:coveragereport -reporttypes:Cobertura
  displayName: Merge coverage
- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage results to Azure DevOps
  inputs:
    codeCoverageTool: cobertura
    summaryFileLocation: 'coveragereport/Cobertura.xml'
    failIfCoverageEmpty: true
