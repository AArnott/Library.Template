parameters:
  includeMacOS:

steps:
- download: current
  artifact: coverageResults-Windows
  displayName: ðŸ”» Download Windows code coverage results
  continueOnError: true
- download: current
  artifact: coverageResults-Linux
  displayName: ðŸ”» Download Linux code coverage results
  continueOnError: true
- download: current
  artifact: coverageResults-macOS
  displayName: ðŸ”» Download macOS code coverage results
  continueOnError: true
  condition: ${{ parameters.includeMacOS }}
- powershell: |
    Copy-Item -Recurse $(Pipeline.Workspace)/coverageResults-Windows/obj/* $(System.DefaultWorkingDirectory)/obj
    Write-Host 'Substituting {reporoot} with $(System.DefaultWorkingDirectory)'
    $reports = Get-ChildItem -Recurse '$(Pipeline.Workspace)/*.cobertura.xml'
    $reports |% {
        # In addition to replacing {reporoot}, we also normalize on one kind of slash so that the report aggregates data for a file whether data was collected on Windows or not.
        $content = Get-Content -Path $_ |% { [Regex]::Replace($_, '{reporoot}([^"]+)', { '$(System.DefaultWorkingDirectory)' + $args[0].groups[1].value.replace([IO.Path]::AltDirectorySeparatorChar, [IO.Path]::DirectorySeparatorChar) }) }
        Set-Content -Path $_ -Value $content -Encoding UTF8
    }

    # merge all reports
    dotnet tool install --tool-path obj dotnet-coverage --version 17.3.2 --configfile azure-pipelines/justnugetorg.nuget.config
    obj/dotnet-coverage merge "$(Pipeline.Workspace)/*.cobertura.xml" -r -o obj/merged.cobertura.xml -f cobertura
  displayName: âš™ Merge coverage
- task: PublishCodeCoverageResults@1
  displayName: ðŸ“¢ Publish code coverage results to Azure DevOps
  inputs:
    codeCoverageTool: cobertura
    summaryFileLocation: obj/merged.cobertura.xml
    failIfCoverageEmpty: true
